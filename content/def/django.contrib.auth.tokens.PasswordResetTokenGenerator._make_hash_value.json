{
    "docstring": "\"\"\"\n        Hash the user's primary key, email (if available), and some user state\n        that's sure to change after a password reset to produce a token that is\n        invalidated when it's used:\n        1. The password field will change upon a password reset (even if the\n           same password is chosen, due to password salting).\n        2. The last_login field will usually be updated very shortly after\n           a password reset.\n        Failing those things, settings.PASSWORD_RESET_TIMEOUT eventually\n        invalidates the token.\n\n        Running this data through salted_hmac() prevents password cracking\n        attempts using the reset token, provided the secret isn't compromised.\n        \"\"\"",
    "name": "_make_hash_value",
    "namespace": "django.contrib.auth.tokens.PasswordResetTokenGenerator._make_hash_value",
    "class_name": "django.contrib.auth.tokens.PasswordResetTokenGenerator",
    "module_name": "",
    "package_name": ""
}