{
    "namespace": "django.core.management.commands.makemessages",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "TranslatableFile",
            "namespace": "django.core.management.commands.makemessages.TranslatableFile",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.core.management.commands.makemessages.TranslatableFile.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.core.management.commands.makemessages.TranslatableFile.__repr__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__eq__",
                    "namespace": "django.core.management.commands.makemessages.TranslatableFile.__eq__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__lt__",
                    "namespace": "django.core.management.commands.makemessages.TranslatableFile.__lt__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "path",
                    "namespace": "django.core.management.commands.makemessages.TranslatableFile.path",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Represent the state of a translatable file during the build process.\n    \"\"\"",
            "name": "BuildFile",
            "namespace": "django.core.management.commands.makemessages.BuildFile",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "is_templatized",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.is_templatized",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "path",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.path",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Path to a file which is being fed into GNU gettext pipeline. This may\n        be either a translatable or its preprocessed version.\n        \"\"\"",
                    "name": "work_path",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.work_path",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Preprocess (if necessary) a translatable file before passing it to\n        xgettext GNU gettext utility.\n        \"\"\"",
                    "name": "preprocess",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.preprocess",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Postprocess messages generated by xgettext GNU gettext utility.\n\n        Transform paths as if these messages were generated from original\n        translatable files rather than from preprocessed versions.\n        \"\"\"",
                    "name": "postprocess_messages",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.postprocess_messages",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Remove a preprocessed copy of a translatable file (if any).\n        \"\"\"",
                    "name": "cleanup",
                    "namespace": "django.core.management.commands.makemessages.BuildFile.cleanup",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "Command",
            "namespace": "django.core.management.commands.makemessages.Command",
            "methods": [
                {
                    "docstring": "",
                    "name": "add_arguments",
                    "namespace": "django.core.management.commands.makemessages.Command.add_arguments",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "handle",
                    "namespace": "django.core.management.commands.makemessages.Command.handle",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "gettext_version",
                    "namespace": "django.core.management.commands.makemessages.Command.gettext_version",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "settings_available",
                    "namespace": "django.core.management.commands.makemessages.Command.settings_available",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Build pot files and apply msguniq to them.\n        \"\"\"",
                    "name": "build_potfiles",
                    "namespace": "django.core.management.commands.makemessages.Command.build_potfiles",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "remove_potfiles",
                    "namespace": "django.core.management.commands.makemessages.Command.remove_potfiles",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Get all files in the given root. Also check that there is a matching\n        locale dir for each file.\n        \"\"\"",
                    "name": "find_files",
                    "namespace": "django.core.management.commands.makemessages.Command.find_files",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Group translatable files by locale directory and run pot file build\n        process for each group.\n        \"\"\"",
                    "name": "process_files",
                    "namespace": "django.core.management.commands.makemessages.Command.process_files",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Extract translatable literals from the specified files, creating or\n        updating the POT file for a given locale directory.\n\n        Use the xgettext GNU gettext utility.\n        \"\"\"",
                    "name": "process_locale_dir",
                    "namespace": "django.core.management.commands.makemessages.Command.process_locale_dir",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Create or update the PO file for self.domain and `locale`.\n        Use contents of the existing `potfile`.\n\n        Use msgmerge and msgattrib GNU gettext utilities.\n        \"\"\"",
                    "name": "write_po_file",
                    "namespace": "django.core.management.commands.makemessages.Command.write_po_file",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Copy plural forms header contents from a Django catalog of locale to\n        the msgs string, inserting it at the right place. msgs should be the\n        contents of a newly created .po file.\n        \"\"\"",
                    "name": "copy_plural_forms",
                    "namespace": "django.core.management.commands.makemessages.Command.copy_plural_forms",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "",
            "name": "check_programs",
            "namespace": "django.core.management.commands.makemessages.check_programs",
            "class_name": "",
            "module_name": "django.core.management.commands.makemessages",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Take a block of raw text that will be passed through str.splitlines() to\n    get universal newlines treatment.\n\n    Return the resulting block of text with normalized `\\n` EOL sequences ready\n    to be written to disk using current platform's native EOLs.\n    \"\"\"",
            "name": "normalize_eols",
            "namespace": "django.core.management.commands.makemessages.normalize_eols",
            "class_name": "",
            "module_name": "django.core.management.commands.makemessages",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Write the `potfile` with the `msgs` contents, making sure its format is\n    valid.\n    \"\"\"",
            "name": "write_pot_file",
            "namespace": "django.core.management.commands.makemessages.write_pot_file",
            "class_name": "",
            "module_name": "django.core.management.commands.makemessages",
            "package_name": ""
        }
    ],
    "package_name": "django.core.management.commands"
}