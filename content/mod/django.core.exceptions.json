{
    "namespace": "django.core.exceptions",
    "docstring": "\"\"\"\nGlobal Django exception and warning classes.\n\"\"\"",
    "classes": [
        {
            "docstring": "\"\"\"The requested model field does not exist\"\"\"",
            "name": "FieldDoesNotExist",
            "namespace": "django.core.exceptions.FieldDoesNotExist",
            "methods": []
        },
        {
            "docstring": "\"\"\"The django.apps registry is not populated yet\"\"\"",
            "name": "AppRegistryNotReady",
            "namespace": "django.core.exceptions.AppRegistryNotReady",
            "methods": []
        },
        {
            "docstring": "\"\"\"The requested object does not exist\"\"\"",
            "name": "ObjectDoesNotExist",
            "namespace": "django.core.exceptions.ObjectDoesNotExist",
            "methods": []
        },
        {
            "docstring": "\"\"\"The query returned multiple objects when only one was expected.\"\"\"",
            "name": "MultipleObjectsReturned",
            "namespace": "django.core.exceptions.MultipleObjectsReturned",
            "methods": []
        },
        {
            "docstring": "\"\"\"The user did something suspicious\"\"\"",
            "name": "SuspiciousOperation",
            "namespace": "django.core.exceptions.SuspiciousOperation",
            "methods": []
        },
        {
            "docstring": "\"\"\"Suspect MIME request in multipart form data\"\"\"",
            "name": "SuspiciousMultipartForm",
            "namespace": "django.core.exceptions.SuspiciousMultipartForm",
            "methods": []
        },
        {
            "docstring": "\"\"\"A Suspicious filesystem operation was attempted\"\"\"",
            "name": "SuspiciousFileOperation",
            "namespace": "django.core.exceptions.SuspiciousFileOperation",
            "methods": []
        },
        {
            "docstring": "\"\"\"HTTP_HOST header contains invalid value\"\"\"",
            "name": "DisallowedHost",
            "namespace": "django.core.exceptions.DisallowedHost",
            "methods": []
        },
        {
            "docstring": "\"\"\"Redirect to scheme not in allowed list\"\"\"",
            "name": "DisallowedRedirect",
            "namespace": "django.core.exceptions.DisallowedRedirect",
            "methods": []
        },
        {
            "docstring": "\"\"\"\n    The number of fields in a GET or POST request exceeded\n    settings.DATA_UPLOAD_MAX_NUMBER_FIELDS.\n    \"\"\"",
            "name": "TooManyFieldsSent",
            "namespace": "django.core.exceptions.TooManyFieldsSent",
            "methods": []
        },
        {
            "docstring": "\"\"\"\n    The size of the request (excluding any file uploads) exceeded\n    settings.DATA_UPLOAD_MAX_MEMORY_SIZE.\n    \"\"\"",
            "name": "RequestDataTooBig",
            "namespace": "django.core.exceptions.RequestDataTooBig",
            "methods": []
        },
        {
            "docstring": "\"\"\"The request was closed before it was completed, or timed out.\"\"\"",
            "name": "RequestAborted",
            "namespace": "django.core.exceptions.RequestAborted",
            "methods": []
        },
        {
            "docstring": "\"\"\"The request is malformed and cannot be processed.\"\"\"",
            "name": "BadRequest",
            "namespace": "django.core.exceptions.BadRequest",
            "methods": []
        },
        {
            "docstring": "\"\"\"The user did not have permission to do that\"\"\"",
            "name": "PermissionDenied",
            "namespace": "django.core.exceptions.PermissionDenied",
            "methods": []
        },
        {
            "docstring": "\"\"\"The requested view does not exist\"\"\"",
            "name": "ViewDoesNotExist",
            "namespace": "django.core.exceptions.ViewDoesNotExist",
            "methods": []
        },
        {
            "docstring": "\"\"\"This middleware is not used in this server configuration\"\"\"",
            "name": "MiddlewareNotUsed",
            "namespace": "django.core.exceptions.MiddlewareNotUsed",
            "methods": []
        },
        {
            "docstring": "\"\"\"Django is somehow improperly configured\"\"\"",
            "name": "ImproperlyConfigured",
            "namespace": "django.core.exceptions.ImproperlyConfigured",
            "methods": []
        },
        {
            "docstring": "\"\"\"Some kind of problem with a model field.\"\"\"",
            "name": "FieldError",
            "namespace": "django.core.exceptions.FieldError",
            "methods": []
        },
        {
            "docstring": "\"\"\"An error while validating data.\"\"\"",
            "name": "ValidationError",
            "namespace": "django.core.exceptions.ValidationError",
            "methods": [
                {
                    "docstring": "\"\"\"\n        The `message` argument can be a single error, a list of errors, or a\n        dictionary that maps field names to lists of errors. What we define as\n        an \"error\" can be either a simple string or an instance of\n        ValidationError with its message attribute set, and what we define as\n        list or dictionary can be an actual `list` or `dict` or an instance\n        of ValidationError with its `error_list` or `error_dict` attribute set.\n        \"\"\"",
                    "name": "__init__",
                    "namespace": "django.core.exceptions.ValidationError.__init__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "message_dict",
                    "namespace": "django.core.exceptions.ValidationError.message_dict",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "messages",
                    "namespace": "django.core.exceptions.ValidationError.messages",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "update_error_dict",
                    "namespace": "django.core.exceptions.ValidationError.update_error_dict",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__iter__",
                    "namespace": "django.core.exceptions.ValidationError.__iter__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__str__",
                    "namespace": "django.core.exceptions.ValidationError.__str__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.core.exceptions.ValidationError.__repr__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__eq__",
                    "namespace": "django.core.exceptions.ValidationError.__eq__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__hash__",
                    "namespace": "django.core.exceptions.ValidationError.__hash__",
                    "class_name": "django.core.exceptions.ValidationError",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"A database query predicate is impossible.\"\"\"",
            "name": "EmptyResultSet",
            "namespace": "django.core.exceptions.EmptyResultSet",
            "methods": []
        },
        {
            "docstring": "\"\"\"The user tried to call a sync-only function from an async context.\"\"\"",
            "name": "SynchronousOnlyOperation",
            "namespace": "django.core.exceptions.SynchronousOnlyOperation",
            "methods": []
        }
    ],
    "functions": [],
    "package_name": "django.core"
}