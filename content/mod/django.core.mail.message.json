{
    "namespace": "django.core.mail.message",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "BadHeaderError",
            "namespace": "django.core.mail.message.BadHeaderError",
            "methods": []
        },
        {
            "docstring": "",
            "name": "MIMEMixin",
            "namespace": "django.core.mail.message.MIMEMixin",
            "methods": [
                {
                    "docstring": "\"\"\"Return the entire formatted message as a string.\n        Optional `unixfrom' when True, means include the Unix From_ envelope\n        header.\n\n        This overrides the default as_string() implementation to not mangle\n        lines that begin with 'From '. See bug #13433 for details.\n        \"\"\"",
                    "name": "as_string",
                    "namespace": "django.core.mail.message.MIMEMixin.as_string",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Return the entire formatted message as bytes.\n        Optional `unixfrom' when True, means include the Unix From_ envelope\n        header.\n\n        This overrides the default as_bytes() implementation to not mangle\n        lines that begin with 'From '. See bug #13433 for details.\n        \"\"\"",
                    "name": "as_bytes",
                    "namespace": "django.core.mail.message.MIMEMixin.as_bytes",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "SafeMIMEMessage",
            "namespace": "django.core.mail.message.SafeMIMEMessage",
            "methods": [
                {
                    "docstring": "",
                    "name": "__setitem__",
                    "namespace": "django.core.mail.message.SafeMIMEMessage.__setitem__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "SafeMIMEText",
            "namespace": "django.core.mail.message.SafeMIMEText",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.core.mail.message.SafeMIMEText.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__setitem__",
                    "namespace": "django.core.mail.message.SafeMIMEText.__setitem__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "set_payload",
                    "namespace": "django.core.mail.message.SafeMIMEText.set_payload",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "SafeMIMEMultipart",
            "namespace": "django.core.mail.message.SafeMIMEMultipart",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.core.mail.message.SafeMIMEMultipart.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__setitem__",
                    "namespace": "django.core.mail.message.SafeMIMEMultipart.__setitem__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"A container for email information.\"\"\"",
            "name": "EmailMessage",
            "namespace": "django.core.mail.message.EmailMessage",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Initialize a single email message (which can be sent to multiple\n        recipients).\n        \"\"\"",
                    "name": "__init__",
                    "namespace": "django.core.mail.message.EmailMessage.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_connection",
                    "namespace": "django.core.mail.message.EmailMessage.get_connection",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "message",
                    "namespace": "django.core.mail.message.EmailMessage.message",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a list of all recipients of the email (includes direct\n        addressees as well as Cc and Bcc entries).\n        \"\"\"",
                    "name": "recipients",
                    "namespace": "django.core.mail.message.EmailMessage.recipients",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Send the email message.\"\"\"",
                    "name": "send",
                    "namespace": "django.core.mail.message.EmailMessage.send",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Attach a file with the given filename and content. The filename can\n        be omitted and the mimetype is guessed, if not provided.\n\n        If the first parameter is a MIMEBase subclass, insert it directly\n        into the resulting message attachments.\n\n        For a text/* mimetype (guessed or specified), when a bytes object is\n        specified as content, decode it as UTF-8. If that fails, set the\n        mimetype to DEFAULT_ATTACHMENT_MIME_TYPE and don't decode the content.\n        \"\"\"",
                    "name": "attach",
                    "namespace": "django.core.mail.message.EmailMessage.attach",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Attach a file from the filesystem.\n\n        Set the mimetype to DEFAULT_ATTACHMENT_MIME_TYPE if it isn't specified\n        and cannot be guessed.\n\n        For a text/* mimetype (guessed or specified), decode the file's content\n        as UTF-8. If that fails, set the mimetype to\n        DEFAULT_ATTACHMENT_MIME_TYPE and don't decode the content.\n        \"\"\"",
                    "name": "attach_file",
                    "namespace": "django.core.mail.message.EmailMessage.attach_file",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_create_message",
                    "namespace": "django.core.mail.message.EmailMessage._create_message",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_create_attachments",
                    "namespace": "django.core.mail.message.EmailMessage._create_attachments",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Convert the content, mimetype pair into a MIME attachment object.\n\n        If the mimetype is message/rfc822, content may be an\n        email.Message or EmailMessage object, as well as a str.\n        \"\"\"",
                    "name": "_create_mime_attachment",
                    "namespace": "django.core.mail.message.EmailMessage._create_mime_attachment",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Convert the filename, content, mimetype triple into a MIME attachment\n        object.\n        \"\"\"",
                    "name": "_create_attachment",
                    "namespace": "django.core.mail.message.EmailMessage._create_attachment",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Set msg's header, either from self.extra_headers, if present, or from\n        the values argument.\n        \"\"\"",
                    "name": "_set_list_header_if_not_empty",
                    "namespace": "django.core.mail.message.EmailMessage._set_list_header_if_not_empty",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    A version of EmailMessage that makes it easy to send multipart/alternative\n    messages. For example, including text and HTML versions of the text is\n    made easier.\n    \"\"\"",
            "name": "EmailMultiAlternatives",
            "namespace": "django.core.mail.message.EmailMultiAlternatives",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Initialize a single email message (which can be sent to multiple\n        recipients).\n        \"\"\"",
                    "name": "__init__",
                    "namespace": "django.core.mail.message.EmailMultiAlternatives.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Attach an alternative content representation.\"\"\"",
                    "name": "attach_alternative",
                    "namespace": "django.core.mail.message.EmailMultiAlternatives.attach_alternative",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_create_message",
                    "namespace": "django.core.mail.message.EmailMultiAlternatives._create_message",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_create_alternatives",
                    "namespace": "django.core.mail.message.EmailMultiAlternatives._create_alternatives",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"Forbid multi-line headers to prevent header injection.\"\"\"",
            "name": "forbid_multi_line_headers",
            "namespace": "django.core.mail.message.forbid_multi_line_headers",
            "class_name": "",
            "module_name": "django.core.mail.message",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Format a pair of (name, address) or an email address string.\n    \"\"\"",
            "name": "sanitize_address",
            "namespace": "django.core.mail.message.sanitize_address",
            "class_name": "",
            "module_name": "django.core.mail.message",
            "package_name": ""
        }
    ],
    "package_name": "django.core.mail"
}