{
    "namespace": "django.template.backends.django",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "DjangoTemplates",
            "namespace": "django.template.backends.django.DjangoTemplates",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.backends.django.DjangoTemplates.__init__",
                    "class_name": "django.template.backends.django.DjangoTemplates",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "from_string",
                    "namespace": "django.template.backends.django.DjangoTemplates.from_string",
                    "class_name": "django.template.backends.django.DjangoTemplates",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_template",
                    "namespace": "django.template.backends.django.DjangoTemplates.get_template",
                    "class_name": "django.template.backends.django.DjangoTemplates",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a collation of template tag libraries from installed\n        applications and the supplied custom_libraries argument.\n        \"\"\"",
                    "name": "get_templatetag_libraries",
                    "namespace": "django.template.backends.django.DjangoTemplates.get_templatetag_libraries",
                    "class_name": "django.template.backends.django.DjangoTemplates",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "Template",
            "namespace": "django.template.backends.django.Template",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.backends.django.Template.__init__",
                    "class_name": "django.template.backends.django.Template",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "origin",
                    "namespace": "django.template.backends.django.Template.origin",
                    "class_name": "django.template.backends.django.Template",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "render",
                    "namespace": "django.template.backends.django.Template.render",
                    "class_name": "django.template.backends.django.Template",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"\n    Create a new TemplateDoesNotExist. Preserve its declared attributes and\n    template debug data but discard __traceback__, __context__, and __cause__\n    to make this object suitable for keeping around (in a cache, for example).\n    \"\"\"",
            "name": "copy_exception",
            "namespace": "django.template.backends.django.copy_exception",
            "class_name": "",
            "module_name": "django.template.backends.django",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Reraise TemplateDoesNotExist while maintaining template debug information.\n    \"\"\"",
            "name": "reraise",
            "namespace": "django.template.backends.django.reraise",
            "class_name": "",
            "module_name": "django.template.backends.django",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Return the built-in template tag libraries and those from installed\n    applications. Libraries are stored in a dictionary where keys are the\n    individual module names, not the full module paths. Example:\n    django.templatetags.i18n is stored as i18n.\n    \"\"\"",
            "name": "get_installed_libraries",
            "namespace": "django.template.backends.django.get_installed_libraries",
            "class_name": "",
            "module_name": "django.template.backends.django",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Recursively yield template tag libraries defined in submodules of a\n    package.\n    \"\"\"",
            "name": "get_package_libraries",
            "namespace": "django.template.backends.django.get_package_libraries",
            "class_name": "",
            "module_name": "django.template.backends.django",
            "package_name": ""
        }
    ],
    "package_name": "django.template.backends"
}