{
    "namespace": "django.contrib.messages.storage.fallback",
    "docstring": "",
    "classes": [
        {
            "docstring": "\"\"\"\n    Try to store all messages in the first backend. Store any unstored\n    messages in each subsequent backend.\n    \"\"\"",
            "name": "FallbackStorage",
            "namespace": "django.contrib.messages.storage.fallback.FallbackStorage",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.contrib.messages.storage.fallback.FallbackStorage.__init__",
                    "class_name": "django.contrib.messages.storage.fallback.FallbackStorage",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Get a single list of messages from all storage backends.\n        \"\"\"",
                    "name": "_get",
                    "namespace": "django.contrib.messages.storage.fallback.FallbackStorage._get",
                    "class_name": "django.contrib.messages.storage.fallback.FallbackStorage",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Store the messages and return any unstored messages after trying all\n        backends.\n\n        For each storage backend, any messages not stored are passed on to the\n        next backend.\n        \"\"\"",
                    "name": "_store",
                    "namespace": "django.contrib.messages.storage.fallback.FallbackStorage._store",
                    "class_name": "django.contrib.messages.storage.fallback.FallbackStorage",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [],
    "package_name": "django.contrib.messages.storage"
}