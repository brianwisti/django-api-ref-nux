{
    "namespace": "django.views.generic.edit",
    "docstring": "",
    "classes": [
        {
            "docstring": "\"\"\"Provide a way to show and handle a form in a request.\"\"\"",
            "name": "FormMixin",
            "namespace": "django.views.generic.edit.FormMixin"
        },
        {
            "docstring": "\"\"\"Provide a way to show and handle a ModelForm in a request.\"\"\"",
            "name": "ModelFormMixin",
            "namespace": "django.views.generic.edit.ModelFormMixin"
        },
        {
            "docstring": "\"\"\"Render a form on GET and processes it on POST.\"\"\"",
            "name": "ProcessFormView",
            "namespace": "django.views.generic.edit.ProcessFormView"
        },
        {
            "docstring": "\"\"\"A base view for displaying a form.\"\"\"",
            "name": "BaseFormView",
            "namespace": "django.views.generic.edit.BaseFormView"
        },
        {
            "docstring": "\"\"\"A view for displaying a form and rendering a template response.\"\"\"",
            "name": "FormView",
            "namespace": "django.views.generic.edit.FormView"
        },
        {
            "docstring": "\"\"\"\n    Base view for creating a new object instance.\n\n    Using this base class requires subclassing to provide a response mixin.\n    \"\"\"",
            "name": "BaseCreateView",
            "namespace": "django.views.generic.edit.BaseCreateView"
        },
        {
            "docstring": "\"\"\"\n    View for creating a new object, with a response rendered by a template.\n    \"\"\"",
            "name": "CreateView",
            "namespace": "django.views.generic.edit.CreateView"
        },
        {
            "docstring": "\"\"\"\n    Base view for updating an existing object.\n\n    Using this base class requires subclassing to provide a response mixin.\n    \"\"\"",
            "name": "BaseUpdateView",
            "namespace": "django.views.generic.edit.BaseUpdateView"
        },
        {
            "docstring": "\"\"\"View for updating an object, with a response rendered by a template.\"\"\"",
            "name": "UpdateView",
            "namespace": "django.views.generic.edit.UpdateView"
        },
        {
            "docstring": "\"\"\"Provide the ability to delete objects.\"\"\"",
            "name": "DeletionMixin",
            "namespace": "django.views.generic.edit.DeletionMixin"
        },
        {
            "docstring": "",
            "name": "DeleteViewCustomDeleteWarning",
            "namespace": "django.views.generic.edit.DeleteViewCustomDeleteWarning"
        },
        {
            "docstring": "\"\"\"\n    Base view for deleting an object.\n\n    Using this base class requires subclassing to provide a response mixin.\n    \"\"\"",
            "name": "BaseDeleteView",
            "namespace": "django.views.generic.edit.BaseDeleteView"
        },
        {
            "docstring": "\"\"\"\n    View for deleting an object retrieved with self.get_object(), with a\n    response rendered by a template.\n    \"\"\"",
            "name": "DeleteView",
            "namespace": "django.views.generic.edit.DeleteView"
        }
    ],
    "package_name": "django.views.generic"
}