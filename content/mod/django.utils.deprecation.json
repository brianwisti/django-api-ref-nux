{
    "namespace": "django.utils.deprecation",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "RemovedInDjango41Warning",
            "namespace": "django.utils.deprecation.RemovedInDjango41Warning",
            "methods": []
        },
        {
            "docstring": "",
            "name": "RemovedInDjango50Warning",
            "namespace": "django.utils.deprecation.RemovedInDjango50Warning",
            "methods": []
        },
        {
            "docstring": "",
            "name": "warn_about_renamed_method",
            "namespace": "django.utils.deprecation.warn_about_renamed_method",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.utils.deprecation.warn_about_renamed_method.__init__",
                    "class_name": "django.utils.deprecation.warn_about_renamed_method",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__call__",
                    "namespace": "django.utils.deprecation.warn_about_renamed_method.__call__",
                    "class_name": "django.utils.deprecation.warn_about_renamed_method",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Handles the deprecation paths when renaming a method.\n\n    It does the following:\n        1) Define the new method if missing and complain about it.\n        2) Define the old method if missing.\n        3) Complain whenever an old method is called.\n\n    See #15363 for more details.\n    \"\"\"",
            "name": "RenameMethodsBase",
            "namespace": "django.utils.deprecation.RenameMethodsBase",
            "methods": [
                {
                    "docstring": "",
                    "name": "__new__",
                    "namespace": "django.utils.deprecation.RenameMethodsBase.__new__",
                    "class_name": "django.utils.deprecation.RenameMethodsBase",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "DeprecationInstanceCheck",
            "namespace": "django.utils.deprecation.DeprecationInstanceCheck",
            "methods": [
                {
                    "docstring": "",
                    "name": "__instancecheck__",
                    "namespace": "django.utils.deprecation.DeprecationInstanceCheck.__instancecheck__",
                    "class_name": "django.utils.deprecation.DeprecationInstanceCheck",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "MiddlewareMixin",
            "namespace": "django.utils.deprecation.MiddlewareMixin",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.utils.deprecation.MiddlewareMixin.__init__",
                    "class_name": "django.utils.deprecation.MiddlewareMixin",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.utils.deprecation.MiddlewareMixin.__repr__",
                    "class_name": "django.utils.deprecation.MiddlewareMixin",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        If get_response is a coroutine function, turns us into async mode so\n        a thread is not consumed during a whole request.\n        \"\"\"",
                    "name": "_async_check",
                    "namespace": "django.utils.deprecation.MiddlewareMixin._async_check",
                    "class_name": "django.utils.deprecation.MiddlewareMixin",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__call__",
                    "namespace": "django.utils.deprecation.MiddlewareMixin.__call__",
                    "class_name": "django.utils.deprecation.MiddlewareMixin",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Async version of __call__ that is swapped in when an async request\n        is running.\n        \"\"\"",
                    "name": "__acall__",
                    "namespace": "django.utils.deprecation.MiddlewareMixin.__acall__",
                    "class_name": "django.utils.deprecation.MiddlewareMixin",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [],
    "package_name": "django.utils"
}