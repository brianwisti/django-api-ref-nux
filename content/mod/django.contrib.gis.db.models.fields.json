{
    "namespace": "django.contrib.gis.db.models.fields",
    "docstring": "",
    "classes": [
        {
            "docstring": "\"\"\"\n    The Base GIS Field.\n\n    It's used as a base class for GeometryField and RasterField. Defines\n    properties that are common to all GIS fields such as the characteristics\n    of the spatial reference system of the field.\n    \"\"\"",
            "name": "BaseSpatialField",
            "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField",
            "methods": [
                {
                    "docstring": "\"\"\"\n        The initialization function for base spatial fields. Takes the following\n        as keyword arguments:\n\n        srid:\n         The spatial reference system identifier, an OGC standard.\n         Defaults to 4326 (WGS84).\n\n        spatial_index:\n         Indicates whether to create a spatial index.  Defaults to True.\n         Set this instead of 'db_index' for geographic fields since index\n         creation is different for geometry columns.\n        \"\"\"",
                    "name": "__init__",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "deconstruct",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.deconstruct",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "db_type",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.db_type",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "spheroid",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.spheroid",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "units",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.units",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "units_name",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.units_name",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return true if this field's SRID corresponds with a coordinate\n        system that uses non-projected units (e.g., latitude/longitude).\n        \"\"\"",
                    "name": "geodetic",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.geodetic",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return the placeholder for the spatial column for the\n        given value.\n        \"\"\"",
                    "name": "get_placeholder",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.get_placeholder",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return the default SRID for the given geometry or raster, taking into\n        account the SRID set for the field. For example, if the input geometry\n        or raster doesn't have an SRID, then the SRID of the field will be\n        returned.\n        \"\"\"",
                    "name": "get_srid",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.get_srid",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_db_prep_value",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.get_db_prep_value",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a GDALRaster if conversion is successful, otherwise return None.\n        \"\"\"",
                    "name": "get_raster_prep_value",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.get_raster_prep_value",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_prep_value",
                    "namespace": "django.contrib.gis.db.models.fields.BaseSpatialField.get_prep_value",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    The base Geometry field -- maps to the OpenGIS Specification Geometry type.\n    \"\"\"",
            "name": "GeometryField",
            "namespace": "django.contrib.gis.db.models.fields.GeometryField",
            "methods": [
                {
                    "docstring": "\"\"\"\n        The initialization function for geometry fields. In addition to the\n        parameters from BaseSpatialField, it takes the following as keyword\n        arguments:\n\n        dim:\n         The number of dimensions for this geometry.  Defaults to 2.\n\n        extent:\n         Customize the extent, in a 4-tuple of WGS 84 coordinates, for the\n         geometry field entry in the `USER_SDO_GEOM_METADATA` table.  Defaults\n         to (-180.0, -90.0, 180.0, 90.0).\n\n        tolerance:\n         Define the tolerance, in meters, to use for the geometry field\n         entry in the `USER_SDO_GEOM_METADATA` table.  Defaults to 0.05.\n        \"\"\"",
                    "name": "__init__",
                    "namespace": "django.contrib.gis.db.models.fields.GeometryField.__init__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "deconstruct",
                    "namespace": "django.contrib.gis.db.models.fields.GeometryField.deconstruct",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "contribute_to_class",
                    "namespace": "django.contrib.gis.db.models.fields.GeometryField.contribute_to_class",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "formfield",
                    "namespace": "django.contrib.gis.db.models.fields.GeometryField.formfield",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return the selection format string, depending on the requirements\n        of the spatial backend. For example, Oracle and MySQL require custom\n        selection formats in order to retrieve geometries in OGC WKB.\n        \"\"\"",
                    "name": "select_format",
                    "namespace": "django.contrib.gis.db.models.fields.GeometryField.select_format",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "PointField",
            "namespace": "django.contrib.gis.db.models.fields.PointField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "LineStringField",
            "namespace": "django.contrib.gis.db.models.fields.LineStringField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "PolygonField",
            "namespace": "django.contrib.gis.db.models.fields.PolygonField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "MultiPointField",
            "namespace": "django.contrib.gis.db.models.fields.MultiPointField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "MultiLineStringField",
            "namespace": "django.contrib.gis.db.models.fields.MultiLineStringField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "MultiPolygonField",
            "namespace": "django.contrib.gis.db.models.fields.MultiPolygonField",
            "methods": []
        },
        {
            "docstring": "",
            "name": "GeometryCollectionField",
            "namespace": "django.contrib.gis.db.models.fields.GeometryCollectionField",
            "methods": []
        },
        {
            "docstring": "\"Used as a return value from an extent aggregate\"",
            "name": "ExtentField",
            "namespace": "django.contrib.gis.db.models.fields.ExtentField",
            "methods": [
                {
                    "docstring": "",
                    "name": "get_internal_type",
                    "namespace": "django.contrib.gis.db.models.fields.ExtentField.get_internal_type",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "select_format",
                    "namespace": "django.contrib.gis.db.models.fields.ExtentField.select_format",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Raster field for GeoDjango -- evaluates into GDALRaster objects.\n    \"\"\"",
            "name": "RasterField",
            "namespace": "django.contrib.gis.db.models.fields.RasterField",
            "methods": [
                {
                    "docstring": "",
                    "name": "_check_connection",
                    "namespace": "django.contrib.gis.db.models.fields.RasterField._check_connection",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "db_type",
                    "namespace": "django.contrib.gis.db.models.fields.RasterField.db_type",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "from_db_value",
                    "namespace": "django.contrib.gis.db.models.fields.RasterField.from_db_value",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "contribute_to_class",
                    "namespace": "django.contrib.gis.db.models.fields.RasterField.contribute_to_class",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_transform",
                    "namespace": "django.contrib.gis.db.models.fields.RasterField.get_transform",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"\n    Return the units, unit name, and spheroid WKT associated with the\n    given SRID from the `spatial_ref_sys` (or equivalent) spatial database\n    table for the given database connection.  These results are cached.\n    \"\"\"",
            "name": "get_srid_info",
            "namespace": "django.contrib.gis.db.models.fields.get_srid_info",
            "class_name": "",
            "module_name": "django.contrib.gis.db.models.fields",
            "package_name": ""
        }
    ],
    "package_name": "django.contrib.gis.db.models"
}