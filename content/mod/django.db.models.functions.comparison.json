{
    "namespace": "django.db.models.functions.comparison",
    "docstring": "\"\"\"Database functions that do comparisons or type conversions.\"\"\"",
    "classes": [
        {
            "docstring": "\"\"\"Coerce an expression to a new field type.\"\"\"",
            "name": "Cast",
            "namespace": "django.db.models.functions.comparison.Cast"
        },
        {
            "docstring": "\"\"\"Return, from left to right, the first non-null expression.\"\"\"",
            "name": "Coalesce",
            "namespace": "django.db.models.functions.comparison.Coalesce"
        },
        {
            "docstring": "",
            "name": "Collate",
            "namespace": "django.db.models.functions.comparison.Collate"
        },
        {
            "docstring": "\"\"\"\n    Return the maximum expression.\n\n    If any expression is null the return value is database-specific:\n    On PostgreSQL, the maximum not-null expression is returned.\n    On MySQL, Oracle, and SQLite, if any expression is null, null is returned.\n    \"\"\"",
            "name": "Greatest",
            "namespace": "django.db.models.functions.comparison.Greatest"
        },
        {
            "docstring": "",
            "name": "JSONObject",
            "namespace": "django.db.models.functions.comparison.JSONObject"
        },
        {
            "docstring": "\"\"\"\n    Return the minimum expression.\n\n    If any expression is null the return value is database-specific:\n    On PostgreSQL, return the minimum not-null expression.\n    On MySQL, Oracle, and SQLite, if any expression is null, return null.\n    \"\"\"",
            "name": "Least",
            "namespace": "django.db.models.functions.comparison.Least"
        },
        {
            "docstring": "",
            "name": "NullIf",
            "namespace": "django.db.models.functions.comparison.NullIf"
        }
    ]
}