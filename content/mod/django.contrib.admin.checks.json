{
    "namespace": "django.contrib.admin.checks",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "BaseModelAdminChecks",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks",
            "methods": [
                {
                    "docstring": "",
                    "name": "check",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks.check",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Check that `autocomplete_fields` is a list or tuple of model fields.\n        \"\"\"",
                    "name": "_check_autocomplete_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_autocomplete_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Check that an item in `autocomplete_fields` is a ForeignKey or a\n        ManyToManyField and that the item has a related ModelAdmin with\n        search_fields defined.\n        \"\"\"",
                    "name": "_check_autocomplete_fields_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_autocomplete_fields_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that `raw_id_fields` only contains field names that are listed\n        on the model. \"\"\"",
                    "name": "_check_raw_id_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_raw_id_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check an item of `raw_id_fields`, i.e. check that field named\n        `field_name` exists in model `model` and is a ForeignKey or a\n        ManyToManyField. \"\"\"",
                    "name": "_check_raw_id_fields_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_raw_id_fields_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that `fields` only refer to existing fields, doesn't contain\n        duplicates. Check if at most one of `fields` and `fieldsets` is defined.\n        \"\"\"",
                    "name": "_check_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that fieldsets is properly formatted and doesn't contain\n        duplicates. \"\"\"",
                    "name": "_check_fieldsets",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fieldsets",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check an item of `fieldsets`, i.e. check that this is a pair of a\n        set name and a dictionary containing \"fields\" key. \"\"\"",
                    "name": "_check_fieldsets_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fieldsets_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" `fields` should be an item of `fields` or an item of\n        fieldset[1]['fields'] for any `fieldset` in `fieldsets`. It should be a\n        field name or a tuple of field names. \"\"\"",
                    "name": "_check_field_spec",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_field_spec",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_field_spec_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_field_spec_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that exclude is a sequence without duplicates. \"\"\"",
                    "name": "_check_exclude",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_exclude",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that form subclasses BaseModelForm. \"\"\"",
                    "name": "_check_form",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_form",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that filter_vertical is a sequence of field names. \"\"\"",
                    "name": "_check_filter_vertical",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_vertical",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that filter_horizontal is a sequence of field names. \"\"\"",
                    "name": "_check_filter_horizontal",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_horizontal",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check one item of `filter_vertical` or `filter_horizontal`, i.e.\n        check that given field exists and is a ManyToManyField. \"\"\"",
                    "name": "_check_filter_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that `radio_fields` is a dictionary. \"\"\"",
                    "name": "_check_radio_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that a key of `radio_fields` dictionary is name of existing\n        field and that the field is a ForeignKey or has `choices` defined. \"\"\"",
                    "name": "_check_radio_fields_key",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields_key",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check type of a value of `radio_fields` dictionary. \"\"\"",
                    "name": "_check_radio_fields_value",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields_value",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_view_on_site_url",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_view_on_site_url",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that `prepopulated_fields` is a dictionary containing allowed\n        field types. \"\"\"",
                    "name": "_check_prepopulated_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check a key of `prepopulated_fields` dictionary, i.e. check that it\n        is a name of existing field and the field is one of the allowed types.\n        \"\"\"",
                    "name": "_check_prepopulated_fields_key",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_key",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check a value of `prepopulated_fields` dictionary, i.e. it's an\n        iterable of existing fields. \"\"\"",
                    "name": "_check_prepopulated_fields_value",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_value",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" For `prepopulated_fields` equal to {\"slug\": (\"title\",)},\n        `field_name` is \"title\". \"\"\"",
                    "name": "_check_prepopulated_fields_value_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_value_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that ordering refers to existing fields or is random. \"\"\"",
                    "name": "_check_ordering",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_ordering",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that `ordering` refers to existing fields. \"\"\"",
                    "name": "_check_ordering_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_ordering_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that readonly_fields refers to proper attribute or field. \"\"\"",
                    "name": "_check_readonly_fields",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_readonly_fields",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_readonly_fields_item",
                    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_readonly_fields_item",
                    "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "ModelAdminChecks",
            "namespace": "django.contrib.admin.checks.ModelAdminChecks",
            "methods": [
                {
                    "docstring": "",
                    "name": "check",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks.check",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check save_as is a boolean. \"\"\"",
                    "name": "_check_save_as",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_save_as",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check save_on_top is a boolean. \"\"\"",
                    "name": "_check_save_on_top",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_save_on_top",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check all inline model admin classes. \"\"\"",
                    "name": "_check_inlines",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_inlines",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check one inline model admin. \"\"\"",
                    "name": "_check_inlines_item",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_inlines_item",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_display only contains fields or usable attributes.\n        \"\"\"",
                    "name": "_check_list_display",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_display",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_list_display_item",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_display_item",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_display_links is a unique subset of list_display.\n        \"\"\"",
                    "name": "_check_list_display_links",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_display_links",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_list_display_links_item",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_display_links_item",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_list_filter",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_filter",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Check one item of `list_filter`, i.e. check if it is one of three options:\n        1. 'field' -- a basic field filter, possibly w/ relationships (e.g.\n           'field__rel')\n        2. ('field', SomeFieldListFilter) - a field-based list filter class\n        3. SomeListFilter - a non-field list filter class\n        \"\"\"",
                    "name": "_check_list_filter_item",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_filter_item",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_select_related is a boolean, a list or a tuple. \"\"\"",
                    "name": "_check_list_select_related",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_select_related",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_per_page is an integer. \"\"\"",
                    "name": "_check_list_per_page",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_per_page",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_max_show_all is an integer. \"\"\"",
                    "name": "_check_list_max_show_all",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_max_show_all",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that list_editable is a sequence of editable fields from\n        list_display without first element. \"\"\"",
                    "name": "_check_list_editable",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_editable",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_list_editable_item",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_list_editable_item",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check search_fields is a sequence. \"\"\"",
                    "name": "_check_search_fields",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_search_fields",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that date_hierarchy refers to DateField or DateTimeField. \"\"\"",
                    "name": "_check_date_hierarchy",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_date_hierarchy",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Actions with an allowed_permission attribute require the ModelAdmin to\n        implement a has_<perm>_permission() method for each permission.\n        \"\"\"",
                    "name": "_check_action_permission_methods",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_action_permission_methods",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Check that every action has a unique __name__.\"\"\"",
                    "name": "_check_actions_uniqueness",
                    "namespace": "django.contrib.admin.checks.ModelAdminChecks._check_actions_uniqueness",
                    "class_name": "django.contrib.admin.checks.ModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "InlineModelAdminChecks",
            "namespace": "django.contrib.admin.checks.InlineModelAdminChecks",
            "methods": [
                {
                    "docstring": "",
                    "name": "check",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks.check",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_exclude_of_parent_model",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_exclude_of_parent_model",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_check_relation",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_relation",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that extra is an integer. \"\"\"",
                    "name": "_check_extra",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_extra",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that max_num is an integer. \"\"\"",
                    "name": "_check_max_num",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_max_num",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check that min_num is an integer. \"\"\"",
                    "name": "_check_min_num",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_min_num",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\" Check formset is a subclass of BaseModelFormSet. \"\"\"",
                    "name": "_check_formset",
                    "namespace": "django.contrib.admin.checks.InlineModelAdminChecks._check_formset",
                    "class_name": "django.contrib.admin.checks.InlineModelAdminChecks",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"\n    issubclass() variant that doesn't raise an exception if cls isn't a\n    class.\n    \"\"\"",
            "name": "_issubclass",
            "namespace": "django.contrib.admin.checks._issubclass",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Return whether or not a dotted class path (or a subclass of that class) is\n    found in a list of candidate paths.\n    \"\"\"",
            "name": "_contains_subclass",
            "namespace": "django.contrib.admin.checks._contains_subclass",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "check_admin_app",
            "namespace": "django.contrib.admin.checks.check_admin_app",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Check that the admin's dependencies are correctly installed.\n    \"\"\"",
            "name": "check_dependencies",
            "namespace": "django.contrib.admin.checks.check_dependencies",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "must_be",
            "namespace": "django.contrib.admin.checks.must_be",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "must_inherit_from",
            "namespace": "django.contrib.admin.checks.must_inherit_from",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "refer_to_missing_field",
            "namespace": "django.contrib.admin.checks.refer_to_missing_field",
            "class_name": "",
            "module_name": "django.contrib.admin.checks",
            "package_name": ""
        }
    ],
    "package_name": "django.contrib.admin"
}