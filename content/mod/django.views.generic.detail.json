{
    "namespace": "django.views.generic.detail",
    "docstring": "",
    "classes": [
        {
            "docstring": "\"\"\"\n    Provide the ability to retrieve a single object for further manipulation.\n    \"\"\"",
            "name": "SingleObjectMixin",
            "namespace": "django.views.generic.detail.SingleObjectMixin",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Return the object the view is displaying.\n\n        Require `self.queryset` and a `pk` or `slug` argument in the URLconf.\n        Subclasses can override this to return any object.\n        \"\"\"",
                    "name": "get_object",
                    "namespace": "django.views.generic.detail.SingleObjectMixin.get_object",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return the `QuerySet` that will be used to look up the object.\n\n        This method is called by the default implementation of get_object() and\n        may not be called if get_object() is overridden.\n        \"\"\"",
                    "name": "get_queryset",
                    "namespace": "django.views.generic.detail.SingleObjectMixin.get_queryset",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Get the name of a slug field to be used to look up by slug.\"\"\"",
                    "name": "get_slug_field",
                    "namespace": "django.views.generic.detail.SingleObjectMixin.get_slug_field",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Get the name to use for the object.\"\"\"",
                    "name": "get_context_object_name",
                    "namespace": "django.views.generic.detail.SingleObjectMixin.get_context_object_name",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Insert the single object into the context dict.\"\"\"",
                    "name": "get_context_data",
                    "namespace": "django.views.generic.detail.SingleObjectMixin.get_context_data",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"A base view for displaying a single object.\"\"\"",
            "name": "BaseDetailView",
            "namespace": "django.views.generic.detail.BaseDetailView",
            "methods": [
                {
                    "docstring": "",
                    "name": "get",
                    "namespace": "django.views.generic.detail.BaseDetailView.get",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "SingleObjectTemplateResponseMixin",
            "namespace": "django.views.generic.detail.SingleObjectTemplateResponseMixin",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Return a list of template names to be used for the request. May not be\n        called if render_to_response() is overridden. Return the following list:\n\n        * the value of ``template_name`` on the view (if provided)\n        * the contents of the ``template_name_field`` field on the\n          object instance that the view is operating upon (if available)\n        * ``<app_label>/<model_name><template_name_suffix>.html``\n        \"\"\"",
                    "name": "get_template_names",
                    "namespace": "django.views.generic.detail.SingleObjectTemplateResponseMixin.get_template_names",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Render a \"detail\" view of an object.\n\n    By default this is a model instance looked up from `self.queryset`, but the\n    view will support display of *any* object by overriding `self.get_object()`.\n    \"\"\"",
            "name": "DetailView",
            "namespace": "django.views.generic.detail.DetailView",
            "methods": []
        }
    ],
    "functions": [],
    "package_name": "django.views.generic"
}