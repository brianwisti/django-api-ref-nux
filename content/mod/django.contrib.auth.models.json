{
    "namespace": "django.contrib.auth.models",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "PermissionManager",
            "namespace": "django.contrib.auth.models.PermissionManager",
            "methods": [
                {
                    "docstring": "",
                    "name": "get_by_natural_key",
                    "namespace": "django.contrib.auth.models.PermissionManager.get_by_natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    The permissions system provides a way to assign permissions to specific\n    users and groups of users.\n\n    The permission system is used by the Django admin site, but may also be\n    useful in your own code. The Django admin site uses permissions as follows:\n\n        - The \"add\" permission limits the user's ability to view the \"add\" form\n          and add an object.\n        - The \"change\" permission limits a user's ability to view the change\n          list, view the \"change\" form and change an object.\n        - The \"delete\" permission limits the ability to delete an object.\n        - The \"view\" permission limits the ability to view an object.\n\n    Permissions are set globally per type of object, not per specific object\n    instance. It is possible to say \"Mary may change news stories,\" but it's\n    not currently possible to say \"Mary may change news stories, but only the\n    ones she created herself\" or \"Mary may only change news stories that have a\n    certain status or publication date.\"\n\n    The permissions listed above are automatically created for each model.\n    \"\"\"",
            "name": "Permission",
            "namespace": "django.contrib.auth.models.Permission",
            "methods": [
                {
                    "docstring": "",
                    "name": "__str__",
                    "namespace": "django.contrib.auth.models.Permission.__str__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "natural_key",
                    "namespace": "django.contrib.auth.models.Permission.natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    The manager for the auth's Group model.\n    \"\"\"",
            "name": "GroupManager",
            "namespace": "django.contrib.auth.models.GroupManager",
            "methods": [
                {
                    "docstring": "",
                    "name": "get_by_natural_key",
                    "namespace": "django.contrib.auth.models.GroupManager.get_by_natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Groups are a generic way of categorizing users to apply permissions, or\n    some other label, to those users. A user can belong to any number of\n    groups.\n\n    A user in a group automatically has all the permissions granted to that\n    group. For example, if the group 'Site editors' has the permission\n    can_edit_home_page, any user in that group will have that permission.\n\n    Beyond permissions, groups are a convenient way to categorize users to\n    apply some label, or extended functionality, to them. For example, you\n    could create a group 'Special users', and you could write code that would\n    do special things to those users -- such as giving them access to a\n    members-only portion of your site, or sending them members-only email\n    messages.\n    \"\"\"",
            "name": "Group",
            "namespace": "django.contrib.auth.models.Group",
            "methods": [
                {
                    "docstring": "",
                    "name": "__str__",
                    "namespace": "django.contrib.auth.models.Group.__str__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "natural_key",
                    "namespace": "django.contrib.auth.models.Group.natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "UserManager",
            "namespace": "django.contrib.auth.models.UserManager",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Create and save a user with the given username, email, and password.\n        \"\"\"",
                    "name": "_create_user",
                    "namespace": "django.contrib.auth.models.UserManager._create_user",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "create_user",
                    "namespace": "django.contrib.auth.models.UserManager.create_user",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "create_superuser",
                    "namespace": "django.contrib.auth.models.UserManager.create_superuser",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "with_perm",
                    "namespace": "django.contrib.auth.models.UserManager.with_perm",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Add the fields and methods necessary to support the Group and Permission\n    models using the ModelBackend.\n    \"\"\"",
            "name": "PermissionsMixin",
            "namespace": "django.contrib.auth.models.PermissionsMixin",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Return a list of permission strings that this user has directly.\n        Query all available auth backends. If an object is passed in,\n        return only permissions matching this object.\n        \"\"\"",
                    "name": "get_user_permissions",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.get_user_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a list of permission strings that this user has through their\n        groups. Query all available auth backends. If an object is passed in,\n        return only permissions matching this object.\n        \"\"\"",
                    "name": "get_group_permissions",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.get_group_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_all_permissions",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.get_all_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return True if the user has the specified permission. Query all\n        available auth backends, but return immediately if any backend returns\n        True. Thus, a user who has permission from a single auth backend is\n        assumed to have permission in general. If an object is provided, check\n        permissions for that object.\n        \"\"\"",
                    "name": "has_perm",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.has_perm",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return True if the user has each of the specified permissions. If\n        object is passed, check if the user has all required perms for it.\n        \"\"\"",
                    "name": "has_perms",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.has_perms",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return True if the user has any permissions in the given app label.\n        Use similar logic as has_perm(), above.\n        \"\"\"",
                    "name": "has_module_perms",
                    "namespace": "django.contrib.auth.models.PermissionsMixin.has_module_perms",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    An abstract base class implementing a fully featured User model with\n    admin-compliant permissions.\n\n    Username and password are required. Other fields are optional.\n    \"\"\"",
            "name": "AbstractUser",
            "namespace": "django.contrib.auth.models.AbstractUser",
            "methods": [
                {
                    "docstring": "",
                    "name": "clean",
                    "namespace": "django.contrib.auth.models.AbstractUser.clean",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return the first_name plus the last_name, with a space in between.\n        \"\"\"",
                    "name": "get_full_name",
                    "namespace": "django.contrib.auth.models.AbstractUser.get_full_name",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Return the short name for the user.\"\"\"",
                    "name": "get_short_name",
                    "namespace": "django.contrib.auth.models.AbstractUser.get_short_name",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Send an email to this user.\"\"\"",
                    "name": "email_user",
                    "namespace": "django.contrib.auth.models.AbstractUser.email_user",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "\"\"\"\n    Users within the Django authentication system are represented by this\n    model.\n\n    Username and password are required. Other fields are optional.\n    \"\"\"",
            "name": "User",
            "namespace": "django.contrib.auth.models.User",
            "methods": []
        },
        {
            "docstring": "",
            "name": "AnonymousUser",
            "namespace": "django.contrib.auth.models.AnonymousUser",
            "methods": [
                {
                    "docstring": "",
                    "name": "__str__",
                    "namespace": "django.contrib.auth.models.AnonymousUser.__str__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__eq__",
                    "namespace": "django.contrib.auth.models.AnonymousUser.__eq__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__hash__",
                    "namespace": "django.contrib.auth.models.AnonymousUser.__hash__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__int__",
                    "namespace": "django.contrib.auth.models.AnonymousUser.__int__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "save",
                    "namespace": "django.contrib.auth.models.AnonymousUser.save",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "delete",
                    "namespace": "django.contrib.auth.models.AnonymousUser.delete",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "set_password",
                    "namespace": "django.contrib.auth.models.AnonymousUser.set_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "check_password",
                    "namespace": "django.contrib.auth.models.AnonymousUser.check_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "groups",
                    "namespace": "django.contrib.auth.models.AnonymousUser.groups",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "user_permissions",
                    "namespace": "django.contrib.auth.models.AnonymousUser.user_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_user_permissions",
                    "namespace": "django.contrib.auth.models.AnonymousUser.get_user_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_group_permissions",
                    "namespace": "django.contrib.auth.models.AnonymousUser.get_group_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_all_permissions",
                    "namespace": "django.contrib.auth.models.AnonymousUser.get_all_permissions",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "has_perm",
                    "namespace": "django.contrib.auth.models.AnonymousUser.has_perm",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "has_perms",
                    "namespace": "django.contrib.auth.models.AnonymousUser.has_perms",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "has_module_perms",
                    "namespace": "django.contrib.auth.models.AnonymousUser.has_module_perms",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "is_anonymous",
                    "namespace": "django.contrib.auth.models.AnonymousUser.is_anonymous",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "is_authenticated",
                    "namespace": "django.contrib.auth.models.AnonymousUser.is_authenticated",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_username",
                    "namespace": "django.contrib.auth.models.AnonymousUser.get_username",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"\n    A signal receiver which updates the last_login date for\n    the user logging in.\n    \"\"\"",
            "name": "update_last_login",
            "namespace": "django.contrib.auth.models.update_last_login",
            "class_name": "",
            "module_name": "django.contrib.auth.models",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_user_get_permissions",
            "namespace": "django.contrib.auth.models._user_get_permissions",
            "class_name": "",
            "module_name": "django.contrib.auth.models",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    A backend can raise `PermissionDenied` to short-circuit permission checking.\n    \"\"\"",
            "name": "_user_has_perm",
            "namespace": "django.contrib.auth.models._user_has_perm",
            "class_name": "",
            "module_name": "django.contrib.auth.models",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    A backend can raise `PermissionDenied` to short-circuit permission checking.\n    \"\"\"",
            "name": "_user_has_module_perms",
            "namespace": "django.contrib.auth.models._user_has_module_perms",
            "class_name": "",
            "module_name": "django.contrib.auth.models",
            "package_name": ""
        }
    ],
    "package_name": "django.contrib.auth"
}