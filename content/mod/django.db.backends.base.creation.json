{
    "namespace": "django.db.backends.base.creation",
    "docstring": "",
    "classes": [
        {
            "docstring": "\"\"\"\n    Encapsulate backend-specific differences pertaining to creation and\n    destruction of the test database.\n    \"\"\"",
            "name": "BaseDatabaseCreation",
            "namespace": "django.db.backends.base.creation.BaseDatabaseCreation",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.__init__",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_nodb_cursor",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._nodb_cursor",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "log",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.log",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Create a test database, prompting the user for confirmation if the\n        database already exists. Return the name of the test database created.\n        \"\"\"",
                    "name": "create_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.create_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Set this database up to be used in testing as a mirror of a primary\n        database whose settings are given.\n        \"\"\"",
                    "name": "set_as_test_mirror",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.set_as_test_mirror",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Serialize all data in the database into a JSON string.\n        Designed only for test runner usage; will not handle large\n        amounts of data.\n        \"\"\"",
                    "name": "serialize_db_to_string",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.serialize_db_to_string",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Reload the database with data from a string generated by\n        the serialize_db_to_string() method.\n        \"\"\"",
                    "name": "deserialize_db_from_string",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.deserialize_db_from_string",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return display string for a database for use in various actions.\n        \"\"\"",
                    "name": "_get_database_display_str",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._get_database_display_str",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Internal implementation - return the name of the test DB that will be\n        created. Only useful when called from create_test_db() and\n        _create_test_db() and when no external munging is done with the 'NAME'\n        settings.\n        \"\"\"",
                    "name": "_get_test_db_name",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._get_test_db_name",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_execute_create_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._execute_create_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Internal implementation - create the test db tables.\n        \"\"\"",
                    "name": "_create_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._create_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Clone a test database.\n        \"\"\"",
                    "name": "clone_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.clone_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a modified connection settings dict for the n-th clone of a DB.\n        \"\"\"",
                    "name": "get_test_db_clone_settings",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.get_test_db_clone_settings",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Internal implementation - duplicate the test db tables.\n        \"\"\"",
                    "name": "_clone_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._clone_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Destroy a test database, prompting the user for confirmation if the\n        database already exists.\n        \"\"\"",
                    "name": "destroy_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.destroy_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Internal implementation - remove the test db tables.\n        \"\"\"",
                    "name": "_destroy_test_db",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation._destroy_test_db",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Mark tests in Django's test suite which are expected failures on this\n        database and test which should be skipped on this database.\n        \"\"\"",
                    "name": "mark_expected_failures_and_skips",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.mark_expected_failures_and_skips",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        SQL to append to the end of the test table creation statements.\n        \"\"\"",
                    "name": "sql_table_creation_suffix",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.sql_table_creation_suffix",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a tuple with elements of self.connection.settings_dict (a\n        DATABASES setting value) that uniquely identify a database\n        accordingly to the RDBMS particularities.\n        \"\"\"",
                    "name": "test_db_signature",
                    "namespace": "django.db.backends.base.creation.BaseDatabaseCreation.test_db_signature",
                    "class_name": "django.db.backends.base.creation.BaseDatabaseCreation",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [],
    "package_name": "django.db.backends.base"
}