{
    "namespace": "django.contrib.auth.base_user",
    "docstring": "\"\"\"\nThis module allows importing AbstractBaseUser even when django.contrib.auth is\nnot in INSTALLED_APPS.\n\"\"\"",
    "classes": [
        {
            "docstring": "",
            "name": "BaseUserManager",
            "namespace": "django.contrib.auth.base_user.BaseUserManager",
            "methods": [
                {
                    "docstring": "\"\"\"\n        Normalize the email address by lowercasing the domain part of it.\n        \"\"\"",
                    "name": "normalize_email",
                    "namespace": "django.contrib.auth.base_user.BaseUserManager.normalize_email",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Generate a random password with the given length and given\n        allowed_chars. The default value of allowed_chars does not have \"I\" or\n        \"O\" or letters and digits that look similar -- just to avoid confusion.\n        \"\"\"",
                    "name": "make_random_password",
                    "namespace": "django.contrib.auth.base_user.BaseUserManager.make_random_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_by_natural_key",
                    "namespace": "django.contrib.auth.base_user.BaseUserManager.get_by_natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "AbstractBaseUser",
            "namespace": "django.contrib.auth.base_user.AbstractBaseUser",
            "methods": [
                {
                    "docstring": "",
                    "name": "__str__",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.__str__",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "save",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.save",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"Return the username for this User.\"\"\"",
                    "name": "get_username",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.get_username",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "clean",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.clean",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "natural_key",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.natural_key",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Always return False. This is a way of comparing User objects to\n        anonymous users.\n        \"\"\"",
                    "name": "is_anonymous",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.is_anonymous",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Always return True. This is a way to tell if the user has been\n        authenticated in templates.\n        \"\"\"",
                    "name": "is_authenticated",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.is_authenticated",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "set_password",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.set_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return a boolean of whether the raw_password was correct. Handles\n        hashing formats behind the scenes.\n        \"\"\"",
                    "name": "check_password",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.check_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "set_unusable_password",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.set_unusable_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return False if set_unusable_password() has been called for this user.\n        \"\"\"",
                    "name": "has_usable_password",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.has_usable_password",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Return an HMAC of the password field.\n        \"\"\"",
                    "name": "get_session_auth_hash",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.get_session_auth_hash",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_email_field_name",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.get_email_field_name",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "normalize_username",
                    "namespace": "django.contrib.auth.base_user.AbstractBaseUser.normalize_username",
                    "class_name": "",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [],
    "package_name": "django.contrib.auth"
}