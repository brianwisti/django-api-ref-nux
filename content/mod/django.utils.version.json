{
    "namespace": "django.utils.version",
    "docstring": "",
    "classes": [],
    "functions": [
        {
            "docstring": "\"\"\"Return a PEP 440-compliant version number from VERSION.\"\"\"",
            "name": "get_version",
            "namespace": "django.utils.version.get_version",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Return main version (X.Y[.Z]) from VERSION.\"\"\"",
            "name": "get_main_version",
            "namespace": "django.utils.version.get_main_version",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Return a tuple of the django version. If version argument is non-empty,\n    check for correctness of the tuple provided.\n    \"\"\"",
            "name": "get_complete_version",
            "namespace": "django.utils.version.get_complete_version",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "get_docs_version",
            "namespace": "django.utils.version.get_docs_version",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Return a numeric identifier of the latest git changeset.\n\n    The result is the UTC timestamp of the changeset in YYYYMMDDHHMMSS format.\n    This value isn't guaranteed to be unique, but collisions are very unlikely,\n    so it's sufficient for generating the development version numbers.\n    \"\"\"",
            "name": "get_git_changeset",
            "namespace": "django.utils.version.get_git_changeset",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Return a tuple of version numbers (e.g. (1, 2, 3)) from the version\n    string (e.g. '1.2.3').\n    \"\"\"",
            "name": "get_version_tuple",
            "namespace": "django.utils.version.get_version_tuple",
            "class_name": "",
            "module_name": "django.utils.version",
            "package_name": ""
        }
    ],
    "package_name": "django.utils"
}