{
    "namespace": "django.core.serializers.base",
    "docstring": "\"\"\"\nModule for abstract serializer/unserializer base classes.\n\"\"\"",
    "classes": [
        {
            "docstring": "\"\"\"\n    Simple wrapper around pickle to be used in signing.dumps()/loads() and\n    cache backends.\n    \"\"\"",
            "name": "PickleSerializer",
            "namespace": "django.core.serializers.base.PickleSerializer"
        },
        {
            "docstring": "\"\"\"The requested serializer was not found.\"\"\"",
            "name": "SerializerDoesNotExist",
            "namespace": "django.core.serializers.base.SerializerDoesNotExist"
        },
        {
            "docstring": "\"\"\"Something bad happened during serialization.\"\"\"",
            "name": "SerializationError",
            "namespace": "django.core.serializers.base.SerializationError"
        },
        {
            "docstring": "\"\"\"Something bad happened during deserialization.\"\"\"",
            "name": "DeserializationError",
            "namespace": "django.core.serializers.base.DeserializationError"
        },
        {
            "docstring": "\"\"\"Something bad happened during deserialization of a ManyToManyField.\"\"\"",
            "name": "M2MDeserializationError",
            "namespace": "django.core.serializers.base.M2MDeserializationError"
        },
        {
            "docstring": "",
            "name": "ProgressBar",
            "namespace": "django.core.serializers.base.ProgressBar"
        },
        {
            "docstring": "\"\"\"\n    Abstract serializer base class.\n    \"\"\"",
            "name": "Serializer",
            "namespace": "django.core.serializers.base.Serializer"
        },
        {
            "docstring": "\"\"\"\n    Abstract base deserializer class.\n    \"\"\"",
            "name": "Deserializer",
            "namespace": "django.core.serializers.base.Deserializer"
        },
        {
            "docstring": "\"\"\"\n    A deserialized model.\n\n    Basically a container for holding the pre-saved deserialized data along\n    with the many-to-many data saved with the object.\n\n    Call ``save()`` to save the object (with the many-to-many data) to the\n    database; call ``save(save_m2m=False)`` to save just the object fields\n    (and not touch the many-to-many stuff.)\n    \"\"\"",
            "name": "DeserializedObject",
            "namespace": "django.core.serializers.base.DeserializedObject"
        }
    ]
}