{
    "docstring": "",
    "namespace": "django.contrib.contenttypes.fields",
    "classes": [
        {
            "docstring": "\"\"\"\n    Provide a generic many-to-one relation through the ``content_type`` and\n    ``object_id`` fields.\n\n    This class also doubles as an accessor to the related object (similar to\n    ForwardManyToOneDescriptor) by adding itself as a model attribute.\n    \"\"\"",
            "name": "GenericForeignKey",
            "parent_name": "django.contrib.contenttypes.fields"
        },
        {
            "docstring": "\"\"\"\n    Used by GenericRelation to store information about the relation.\n    \"\"\"",
            "name": "GenericRel",
            "parent_name": "django.contrib.contenttypes.fields"
        },
        {
            "docstring": "\"\"\"\n    Provide a reverse to a relation created by a GenericForeignKey.\n    \"\"\"",
            "name": "GenericRelation",
            "parent_name": "django.contrib.contenttypes.fields"
        },
        {
            "docstring": "\"\"\"\n    Accessor to the related objects manager on the one-to-many relation created\n    by GenericRelation.\n\n    In the example::\n\n        class Post(Model):\n            comments = GenericRelation(Comment)\n\n    ``post.comments`` is a ReverseGenericManyToOneDescriptor instance.\n    \"\"\"",
            "name": "ReverseGenericManyToOneDescriptor",
            "parent_name": "django.contrib.contenttypes.fields"
        }
    ]
}