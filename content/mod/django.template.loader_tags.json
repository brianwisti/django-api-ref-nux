{
    "namespace": "django.template.loader_tags",
    "docstring": "",
    "classes": [
        {
            "docstring": "",
            "name": "BlockContext",
            "namespace": "django.template.loader_tags.BlockContext",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.loader_tags.BlockContext.__init__",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.template.loader_tags.BlockContext.__repr__",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "add_blocks",
                    "namespace": "django.template.loader_tags.BlockContext.add_blocks",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "pop",
                    "namespace": "django.template.loader_tags.BlockContext.pop",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "push",
                    "namespace": "django.template.loader_tags.BlockContext.push",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_block",
                    "namespace": "django.template.loader_tags.BlockContext.get_block",
                    "class_name": "django.template.loader_tags.BlockContext",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "BlockNode",
            "namespace": "django.template.loader_tags.BlockNode",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.loader_tags.BlockNode.__init__",
                    "class_name": "django.template.loader_tags.BlockNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.template.loader_tags.BlockNode.__repr__",
                    "class_name": "django.template.loader_tags.BlockNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "render",
                    "namespace": "django.template.loader_tags.BlockNode.render",
                    "class_name": "django.template.loader_tags.BlockNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "super",
                    "namespace": "django.template.loader_tags.BlockNode.super",
                    "class_name": "django.template.loader_tags.BlockNode",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "ExtendsNode",
            "namespace": "django.template.loader_tags.ExtendsNode",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.loader_tags.ExtendsNode.__init__",
                    "class_name": "django.template.loader_tags.ExtendsNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.template.loader_tags.ExtendsNode.__repr__",
                    "class_name": "django.template.loader_tags.ExtendsNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        This is a wrapper around engine.find_template(). A history is kept in\n        the render_context attribute between successive extends calls and\n        passed as the skip argument. This enables extends to work recursively\n        without extending the same template twice.\n        \"\"\"",
                    "name": "find_template",
                    "namespace": "django.template.loader_tags.ExtendsNode.find_template",
                    "class_name": "django.template.loader_tags.ExtendsNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "get_parent",
                    "namespace": "django.template.loader_tags.ExtendsNode.get_parent",
                    "class_name": "django.template.loader_tags.ExtendsNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "render",
                    "namespace": "django.template.loader_tags.ExtendsNode.render",
                    "class_name": "django.template.loader_tags.ExtendsNode",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        },
        {
            "docstring": "",
            "name": "IncludeNode",
            "namespace": "django.template.loader_tags.IncludeNode",
            "methods": [
                {
                    "docstring": "",
                    "name": "__init__",
                    "namespace": "django.template.loader_tags.IncludeNode.__init__",
                    "class_name": "django.template.loader_tags.IncludeNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "__repr__",
                    "namespace": "django.template.loader_tags.IncludeNode.__repr__",
                    "class_name": "django.template.loader_tags.IncludeNode",
                    "module_name": "",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n        Render the specified template and context. Cache the template object\n        in render_context to avoid reparsing and loading when used in a for\n        loop.\n        \"\"\"",
                    "name": "render",
                    "namespace": "django.template.loader_tags.IncludeNode.render",
                    "class_name": "django.template.loader_tags.IncludeNode",
                    "module_name": "",
                    "package_name": ""
                }
            ]
        }
    ],
    "functions": [
        {
            "docstring": "\"\"\"\n    Define a block that can be overridden by child templates.\n    \"\"\"",
            "name": "do_block",
            "namespace": "django.template.loader_tags.do_block",
            "class_name": "",
            "module_name": "django.template.loader_tags",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Convert a relative path (starting with './' or '../') to the full template\n    name based on the current_template_name.\n    \"\"\"",
            "name": "construct_relative_path",
            "namespace": "django.template.loader_tags.construct_relative_path",
            "class_name": "",
            "module_name": "django.template.loader_tags",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Signal that this template extends a parent template.\n\n    This tag may be used in two ways: ``{% extends \"base\" %}`` (with quotes)\n    uses the literal value \"base\" as the name of the parent template to extend,\n    or ``{% extends variable %}`` uses the value of ``variable`` as either the\n    name of the parent template to extend (if it evaluates to a string) or as\n    the parent template itself (if it evaluates to a Template object).\n    \"\"\"",
            "name": "do_extends",
            "namespace": "django.template.loader_tags.do_extends",
            "class_name": "",
            "module_name": "django.template.loader_tags",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n    Load a template and render it with the current context. You can pass\n    additional context using keyword arguments.\n\n    Example::\n\n        {% include \"foo/some_include\" %}\n        {% include \"foo/some_include\" with bar=\"BAZZ!\" baz=\"BING!\" %}\n\n    Use the ``only`` argument to exclude the current context when rendering\n    the included template::\n\n        {% include \"foo/some_include\" only %}\n        {% include \"foo/some_include\" with bar=\"1\" only %}\n    \"\"\"",
            "name": "do_include",
            "namespace": "django.template.loader_tags.do_include",
            "class_name": "",
            "module_name": "django.template.loader_tags",
            "package_name": ""
        }
    ],
    "package_name": "django.template"
}