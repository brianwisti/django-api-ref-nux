{
    "namespace": "django.db.models.sql.datastructures",
    "docstring": "\"\"\"\nUseful auxiliary data structures for query construction. Not useful outside\nthe SQL domain.\n\"\"\"",
    "classes": [
        {
            "docstring": "\"\"\"\n    Used by join construction code to indicate the point at which a\n    multi-valued join was attempted (if the caller wants to treat that\n    exceptionally).\n    \"\"\"",
            "name": "MultiJoin",
            "namespace": "django.db.models.sql.datastructures.MultiJoin"
        },
        {
            "docstring": "",
            "name": "Empty",
            "namespace": "django.db.models.sql.datastructures.Empty"
        },
        {
            "docstring": "\"\"\"\n    Used by sql.Query and sql.SQLCompiler to generate JOIN clauses into the\n    FROM entry. For example, the SQL generated could be\n        LEFT OUTER JOIN \"sometable\" T1 ON (\"othertable\".\"sometable_id\" = \"sometable\".\"id\")\n\n    This class is primarily used in Query.alias_map. All entries in alias_map\n    must be Join compatible by providing the following attributes and methods:\n        - table_name (string)\n        - table_alias (possible alias for the table, can be None)\n        - join_type (can be None for those entries that aren't joined from\n          anything)\n        - parent_alias (which table is this join's parent, can be None similarly\n          to join_type)\n        - as_sql()\n        - relabeled_clone()\n    \"\"\"",
            "name": "Join",
            "namespace": "django.db.models.sql.datastructures.Join"
        },
        {
            "docstring": "\"\"\"\n    The BaseTable class is used for base table references in FROM clause. For\n    example, the SQL \"foo\" in\n        SELECT * FROM \"foo\" WHERE somecond\n    could be generated by this class.\n    \"\"\"",
            "name": "BaseTable",
            "namespace": "django.db.models.sql.datastructures.BaseTable"
        }
    ]
}