{
    "name": "django.db.backends.sqlite3",
    "docstring": "",
    "package_name": "django.db.backends",
    "functions": [],
    "classes": [],
    "modules": [
        {
            "namespace": "django.db.backends.sqlite3.creation",
            "docstring": "",
            "functions": [],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.client",
            "docstring": "",
            "functions": [],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.features",
            "docstring": "",
            "functions": [],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.operations",
            "docstring": "",
            "functions": [],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.introspection",
            "docstring": "",
            "functions": [
                {
                    "docstring": "\"\"\" Extract the size number from a \"varchar(11)\" type name \"\"\"",
                    "name": "get_field_size",
                    "namespace": "django.db.backends.sqlite3.introspection.get_field_size",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.introspection",
                    "package_name": ""
                }
            ],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.base",
            "docstring": "\"\"\"\nSQLite backend for the sqlite3 module in the standard library.\n\"\"\"",
            "functions": [
                {
                    "docstring": "\"\"\"\n    Convert bytestrings from Python's sqlite3 interface to a regular string.\n    \"\"\"",
                    "name": "decoder",
                    "namespace": "django.db.backends.sqlite3.base.decoder",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n    Decorator that returns None if any of the arguments to the decorated\n    function are None. Many SQL functions return NULL if any of their arguments\n    are NULL. This decorator simplifies the implementation of this for the\n    custom functions registered below.\n    \"\"\"",
                    "name": "none_guard",
                    "namespace": "django.db.backends.sqlite3.base.none_guard",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n    Return an aggregate class that accumulates values in a list and applies\n    the provided function to the data.\n    \"\"\"",
                    "name": "list_aggregate",
                    "namespace": "django.db.backends.sqlite3.base.list_aggregate",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "check_sqlite_version",
                    "namespace": "django.db.backends.sqlite3.base.check_sqlite_version",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_datetime_parse",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_datetime_parse",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_date_trunc",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_date_trunc",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_time_trunc",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_time_trunc",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_datetime_cast_date",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_datetime_cast_date",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_datetime_cast_time",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_datetime_cast_time",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_datetime_extract",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_datetime_extract",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_datetime_trunc",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_datetime_trunc",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_time_extract",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_time_extract",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_prepare_dtdelta_param",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_prepare_dtdelta_param",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "\"\"\"\n    LHS and RHS can be either:\n    - An integer number of microseconds\n    - A string representing a datetime\n    - A scalar value, e.g. float\n    \"\"\"",
                    "name": "_sqlite_format_dtdelta",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_format_dtdelta",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_time_diff",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_time_diff",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_timestamp_diff",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_timestamp_diff",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_regexp",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_regexp",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_lpad",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_lpad",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                },
                {
                    "docstring": "",
                    "name": "_sqlite_rpad",
                    "namespace": "django.db.backends.sqlite3.base._sqlite_rpad",
                    "class_name": "",
                    "module_name": "django.db.backends.sqlite3.base",
                    "package_name": ""
                }
            ],
            "package_name": "django.db.backends.sqlite3"
        },
        {
            "namespace": "django.db.backends.sqlite3.schema",
            "docstring": "",
            "functions": [],
            "package_name": "django.db.backends.sqlite3"
        }
    ],
    "subpackages": []
}