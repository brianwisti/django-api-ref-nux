{
    "docstring": "\"\"\"\n    An SQL WHERE clause.\n\n    The class is tied to the Query class that created it (in order to create\n    the correct SQL).\n\n    A child is usually an expression producing boolean values. Most likely the\n    expression is a Lookup instance.\n\n    However, a child could also be any class with as_sql() and either\n    relabeled_clone() method or relabel_aliases() and clone() methods and\n    contains_aggregate attribute.\n    \"\"\"",
    "name": "WhereNode",
    "namespace": "django.db.models.sql.where.WhereNode",
    "module_name": "django.db.models.sql.where",
    "package_name": "",
    "methods": [
        {
            "docstring": "\"\"\"\n        Return two possibly None nodes: one for those parts of self that\n        should be included in the WHERE clause and one for those parts of\n        self that must be included in the HAVING clause.\n        \"\"\"",
            "name": "split_having",
            "namespace": "django.db.models.sql.where.WhereNode.split_having",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Return the SQL version of the where clause and the value to be\n        substituted in. Return '', [] if this node matches everything,\n        None, [] if this node is empty, and raise EmptyResultSet if this\n        node can't match anything.\n        \"\"\"",
            "name": "as_sql",
            "namespace": "django.db.models.sql.where.WhereNode.as_sql",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "get_group_by_cols",
            "namespace": "django.db.models.sql.where.WhereNode.get_group_by_cols",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "get_source_expressions",
            "namespace": "django.db.models.sql.where.WhereNode.get_source_expressions",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "set_source_expressions",
            "namespace": "django.db.models.sql.where.WhereNode.set_source_expressions",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Relabel the alias values of any children. 'change_map' is a dictionary\n        mapping old (current) alias values to the new values.\n        \"\"\"",
            "name": "relabel_aliases",
            "namespace": "django.db.models.sql.where.WhereNode.relabel_aliases",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Create a clone of the tree. Must only be called on root nodes (nodes\n        with empty subtree_parents). Childs must be either (Constraint, lookup,\n        value) tuples, or objects supporting .clone().\n        \"\"\"",
            "name": "clone",
            "namespace": "django.db.models.sql.where.WhereNode.clone",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "relabeled_clone",
            "namespace": "django.db.models.sql.where.WhereNode.relabeled_clone",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "copy",
            "namespace": "django.db.models.sql.where.WhereNode.copy",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_contains_aggregate",
            "namespace": "django.db.models.sql.where.WhereNode._contains_aggregate",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "contains_aggregate",
            "namespace": "django.db.models.sql.where.WhereNode.contains_aggregate",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_contains_over_clause",
            "namespace": "django.db.models.sql.where.WhereNode._contains_over_clause",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "contains_over_clause",
            "namespace": "django.db.models.sql.where.WhereNode.contains_over_clause",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_resolve_leaf",
            "namespace": "django.db.models.sql.where.WhereNode._resolve_leaf",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_resolve_node",
            "namespace": "django.db.models.sql.where.WhereNode._resolve_node",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "resolve_expression",
            "namespace": "django.db.models.sql.where.WhereNode.resolve_expression",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "output_field",
            "namespace": "django.db.models.sql.where.WhereNode.output_field",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "select_format",
            "namespace": "django.db.models.sql.where.WhereNode.select_format",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "get_db_converters",
            "namespace": "django.db.models.sql.where.WhereNode.get_db_converters",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "get_lookup",
            "namespace": "django.db.models.sql.where.WhereNode.get_lookup",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        }
    ]
}