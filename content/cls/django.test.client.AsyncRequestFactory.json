{
    "docstring": "\"\"\"\n    Class that lets you create mock ASGI-like Request objects for use in\n    testing. Usage:\n\n    rf = AsyncRequestFactory()\n    get_request = await rf.get('/hello/')\n    post_request = await rf.post('/submit/', {'foo': 'bar'})\n\n    Once you have a request object you can pass it to any view function,\n    including synchronous ones. The reason we have a separate class here is:\n    a) this makes ASGIRequest subclasses, and\n    b) AsyncTestClient can subclass it.\n    \"\"\"",
    "name": "AsyncRequestFactory",
    "namespace": "django.test.client.AsyncRequestFactory",
    "module_name": "django.test.client",
    "package_name": "",
    "methods": [
        {
            "docstring": "\"\"\"The base scope for a request.\"\"\"",
            "name": "_base_scope",
            "namespace": "django.test.client.AsyncRequestFactory._base_scope",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Construct a generic request object.\"\"\"",
            "name": "request",
            "namespace": "django.test.client.AsyncRequestFactory.request",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Construct an arbitrary HTTP request.\"\"\"",
            "name": "generic",
            "namespace": "django.test.client.AsyncRequestFactory.generic",
            "class_name": "",
            "module_name": "",
            "package_name": ""
        }
    ]
}