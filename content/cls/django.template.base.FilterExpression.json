{
    "docstring": "\"\"\"\n    Parse a variable token and its optional filters (all as a single string),\n    and return a list of tuples of the filter name and arguments.\n    Sample::\n\n        >>> token = 'variable|default:\"Default value\"|date:\"Y-m-d\"'\n        >>> p = Parser('')\n        >>> fe = FilterExpression(token, p)\n        >>> len(fe.filters)\n        2\n        >>> fe.var\n        <Variable: 'variable'>\n    \"\"\"",
    "name": "FilterExpression",
    "namespace": "django.template.base.FilterExpression",
    "module_name": "django.template.base",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "__init__",
            "namespace": "django.template.base.FilterExpression.__init__",
            "class_name": "django.template.base.FilterExpression",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "resolve",
            "namespace": "django.template.base.FilterExpression.resolve",
            "class_name": "django.template.base.FilterExpression",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "args_check",
            "namespace": "django.template.base.FilterExpression.args_check",
            "class_name": "django.template.base.FilterExpression",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "__str__",
            "namespace": "django.template.base.FilterExpression.__str__",
            "class_name": "django.template.base.FilterExpression",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "__repr__",
            "namespace": "django.template.base.FilterExpression.__repr__",
            "class_name": "django.template.base.FilterExpression",
            "module_name": "",
            "package_name": ""
        }
    ]
}