{
    "docstring": "",
    "name": "BaseModelAdminChecks",
    "namespace": "django.contrib.admin.checks.BaseModelAdminChecks",
    "module_name": "django.contrib.admin.checks",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "check",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks.check",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Check that `autocomplete_fields` is a list or tuple of model fields.\n        \"\"\"",
            "name": "_check_autocomplete_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_autocomplete_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Check that an item in `autocomplete_fields` is a ForeignKey or a\n        ManyToManyField and that the item has a related ModelAdmin with\n        search_fields defined.\n        \"\"\"",
            "name": "_check_autocomplete_fields_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_autocomplete_fields_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that `raw_id_fields` only contains field names that are listed\n        on the model. \"\"\"",
            "name": "_check_raw_id_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_raw_id_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check an item of `raw_id_fields`, i.e. check that field named\n        `field_name` exists in model `model` and is a ForeignKey or a\n        ManyToManyField. \"\"\"",
            "name": "_check_raw_id_fields_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_raw_id_fields_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that `fields` only refer to existing fields, doesn't contain\n        duplicates. Check if at most one of `fields` and `fieldsets` is defined.\n        \"\"\"",
            "name": "_check_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that fieldsets is properly formatted and doesn't contain\n        duplicates. \"\"\"",
            "name": "_check_fieldsets",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fieldsets",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check an item of `fieldsets`, i.e. check that this is a pair of a\n        set name and a dictionary containing \"fields\" key. \"\"\"",
            "name": "_check_fieldsets_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_fieldsets_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" `fields` should be an item of `fields` or an item of\n        fieldset[1]['fields'] for any `fieldset` in `fieldsets`. It should be a\n        field name or a tuple of field names. \"\"\"",
            "name": "_check_field_spec",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_field_spec",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_check_field_spec_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_field_spec_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that exclude is a sequence without duplicates. \"\"\"",
            "name": "_check_exclude",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_exclude",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that form subclasses BaseModelForm. \"\"\"",
            "name": "_check_form",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_form",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that filter_vertical is a sequence of field names. \"\"\"",
            "name": "_check_filter_vertical",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_vertical",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that filter_horizontal is a sequence of field names. \"\"\"",
            "name": "_check_filter_horizontal",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_horizontal",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check one item of `filter_vertical` or `filter_horizontal`, i.e.\n        check that given field exists and is a ManyToManyField. \"\"\"",
            "name": "_check_filter_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_filter_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that `radio_fields` is a dictionary. \"\"\"",
            "name": "_check_radio_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that a key of `radio_fields` dictionary is name of existing\n        field and that the field is a ForeignKey or has `choices` defined. \"\"\"",
            "name": "_check_radio_fields_key",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields_key",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check type of a value of `radio_fields` dictionary. \"\"\"",
            "name": "_check_radio_fields_value",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_radio_fields_value",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_check_view_on_site_url",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_view_on_site_url",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that `prepopulated_fields` is a dictionary containing allowed\n        field types. \"\"\"",
            "name": "_check_prepopulated_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check a key of `prepopulated_fields` dictionary, i.e. check that it\n        is a name of existing field and the field is one of the allowed types.\n        \"\"\"",
            "name": "_check_prepopulated_fields_key",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_key",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check a value of `prepopulated_fields` dictionary, i.e. it's an\n        iterable of existing fields. \"\"\"",
            "name": "_check_prepopulated_fields_value",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_value",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" For `prepopulated_fields` equal to {\"slug\": (\"title\",)},\n        `field_name` is \"title\". \"\"\"",
            "name": "_check_prepopulated_fields_value_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_prepopulated_fields_value_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that ordering refers to existing fields or is random. \"\"\"",
            "name": "_check_ordering",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_ordering",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that `ordering` refers to existing fields. \"\"\"",
            "name": "_check_ordering_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_ordering_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\" Check that readonly_fields refers to proper attribute or field. \"\"\"",
            "name": "_check_readonly_fields",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_readonly_fields",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "_check_readonly_fields_item",
            "namespace": "django.contrib.admin.checks.BaseModelAdminChecks._check_readonly_fields_item",
            "class_name": "django.contrib.admin.checks.BaseModelAdminChecks",
            "module_name": "",
            "package_name": ""
        }
    ]
}