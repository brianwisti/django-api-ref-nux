{
    "docstring": "\"\"\"\n    Middleware for utilizing web-server-provided authentication.\n\n    If request.user is not authenticated, then this middleware attempts to\n    authenticate the username passed in the ``REMOTE_USER`` request header.\n    If authentication is successful, the user is automatically logged in to\n    persist the user in the session.\n\n    The header used is configurable and defaults to ``REMOTE_USER``.  Subclass\n    this class and change the ``header`` attribute if you need to use a\n    different header.\n    \"\"\"",
    "name": "RemoteUserMiddleware",
    "namespace": "django.contrib.auth.middleware.RemoteUserMiddleware",
    "module_name": "django.contrib.auth.middleware",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "process_request",
            "namespace": "django.contrib.auth.middleware.RemoteUserMiddleware.process_request",
            "class_name": "django.contrib.auth.middleware.RemoteUserMiddleware",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Allow the backend to clean the username, if the backend defines a\n        clean_username method.\n        \"\"\"",
            "name": "clean_username",
            "namespace": "django.contrib.auth.middleware.RemoteUserMiddleware.clean_username",
            "class_name": "django.contrib.auth.middleware.RemoteUserMiddleware",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Remove the current authenticated user in the request which is invalid\n        but only if the user is authenticated via the RemoteUserBackend.\n        \"\"\"",
            "name": "_remove_invalid_user",
            "namespace": "django.contrib.auth.middleware.RemoteUserMiddleware._remove_invalid_user",
            "class_name": "django.contrib.auth.middleware.RemoteUserMiddleware",
            "module_name": "",
            "package_name": ""
        }
    ]
}