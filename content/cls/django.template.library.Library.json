{
    "docstring": "\"\"\"\n    A class for registering template tags and filters. Compiled filter and\n    template tag functions are stored in the filters and tags attributes.\n    The filter, simple_tag, and inclusion_tag methods provide a convenient\n    way to register callables as tags.\n    \"\"\"",
    "name": "Library",
    "namespace": "django.template.library.Library",
    "module_name": "django.template.library",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "__init__",
            "namespace": "django.template.library.Library.__init__",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "tag",
            "namespace": "django.template.library.Library.tag",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "tag_function",
            "namespace": "django.template.library.Library.tag_function",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Register a callable as a template filter. Example:\n\n        @register.filter\n        def lower(value):\n            return value.lower()\n        \"\"\"",
            "name": "filter",
            "namespace": "django.template.library.Library.filter",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "filter_function",
            "namespace": "django.template.library.Library.filter_function",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Register a callable as a compiled template tag. Example:\n\n        @register.simple_tag\n        def hello(*args, **kwargs):\n            return 'world'\n        \"\"\"",
            "name": "simple_tag",
            "namespace": "django.template.library.Library.simple_tag",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Register a callable as an inclusion tag:\n\n        @register.inclusion_tag('results.html')\n        def show_results(poll):\n            choices = poll.choice_set.all()\n            return {'choices': choices}\n        \"\"\"",
            "name": "inclusion_tag",
            "namespace": "django.template.library.Library.inclusion_tag",
            "class_name": "django.template.library.Library",
            "module_name": "",
            "package_name": ""
        }
    ]
}