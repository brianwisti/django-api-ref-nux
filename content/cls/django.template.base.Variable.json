{
    "docstring": "\"\"\"\n    A template variable, resolvable against a given context. The variable may\n    be a hard-coded string (if it begins and ends with single or double quote\n    marks)::\n\n        >>> c = {'article': {'section':'News'}}\n        >>> Variable('article.section').resolve(c)\n        'News'\n        >>> Variable('article').resolve(c)\n        {'section': 'News'}\n        >>> class AClass: pass\n        >>> c = AClass()\n        >>> c.article = AClass()\n        >>> c.article.section = 'News'\n\n    (The example assumes VARIABLE_ATTRIBUTE_SEPARATOR is '.')\n    \"\"\"",
    "name": "Variable",
    "namespace": "django.template.base.Variable",
    "module_name": "django.template.base",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "__init__",
            "namespace": "django.template.base.Variable.__init__",
            "class_name": "django.template.base.Variable",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Resolve this variable against a given context.\"\"\"",
            "name": "resolve",
            "namespace": "django.template.base.Variable.resolve",
            "class_name": "django.template.base.Variable",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "__repr__",
            "namespace": "django.template.base.Variable.__repr__",
            "class_name": "django.template.base.Variable",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "__str__",
            "namespace": "django.template.base.Variable.__str__",
            "class_name": "django.template.base.Variable",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Perform resolution of a real variable (i.e. not a literal) against the\n        given context.\n\n        As indicated by the method's name, this method is an implementation\n        detail and shouldn't be called by external code. Use Variable.resolve()\n        instead.\n        \"\"\"",
            "name": "_resolve_lookup",
            "namespace": "django.template.base.Variable._resolve_lookup",
            "class_name": "django.template.base.Variable",
            "module_name": "",
            "package_name": ""
        }
    ]
}