{
    "docstring": "",
    "name": "Field",
    "namespace": "django.forms.fields.Field",
    "module_name": "django.forms.fields",
    "package_name": "",
    "methods": [
        {
            "docstring": "",
            "name": "__init__",
            "namespace": "django.forms.fields.Field.__init__",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "prepare_value",
            "namespace": "django.forms.fields.Field.prepare_value",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "to_python",
            "namespace": "django.forms.fields.Field.to_python",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "validate",
            "namespace": "django.forms.fields.Field.validate",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "run_validators",
            "namespace": "django.forms.fields.Field.run_validators",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Validate the given value and return its \"cleaned\" value as an\n        appropriate Python object. Raise ValidationError for any errors.\n        \"\"\"",
            "name": "clean",
            "namespace": "django.forms.fields.Field.clean",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Return the value that should be shown for this field on render of a\n        bound form, given the submitted POST data for the field and the initial\n        data, if any.\n\n        For most fields, this will simply be data; FileFields need to handle it\n        a bit differently.\n        \"\"\"",
            "name": "bound_data",
            "namespace": "django.forms.fields.Field.bound_data",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Given a Widget instance (*not* a Widget class), return a dictionary of\n        any HTML attributes that should be added to the Widget, based on this\n        Field.\n        \"\"\"",
            "name": "widget_attrs",
            "namespace": "django.forms.fields.Field.widget_attrs",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"Return True if data differs from initial.\"\"\"",
            "name": "has_changed",
            "namespace": "django.forms.fields.Field.has_changed",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "\"\"\"\n        Return a BoundField instance that will be used when accessing the form\n        field in a template.\n        \"\"\"",
            "name": "get_bound_field",
            "namespace": "django.forms.fields.Field.get_bound_field",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        },
        {
            "docstring": "",
            "name": "__deepcopy__",
            "namespace": "django.forms.fields.Field.__deepcopy__",
            "class_name": "django.forms.fields.Field",
            "module_name": "",
            "package_name": ""
        }
    ]
}